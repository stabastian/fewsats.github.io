{"version":3,"file":"static/webpack/static/development/pages/compound-interest-calculator.js.dfbee95c0baeb6006a32.hot-update.js","sources":["webpack:///./pages/compound-interest-calculator.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Big from 'big.js'\nimport Main from '../layouts/main'\nimport CalculatorRow from '../components/calculator-row'\nimport numeral from 'numeral'\n\nexport default class CompoundInterestCalculator extends Component {\n  state = {\n    form: {\n      capital: 1000,\n      risk: 2,\n      rweek: 3,\n      nweeks: 52\n    }\n  }\n\n  handleInputChange = async e => {\n    const name = e.target.name\n    const value = e.target.value\n    this.setState(state => {\n      return {\n        ...state,\n        form: { ...state.form, ...{ [name]: value } }\n      }\n    })\n  }\n\n  compute() {\n    const result = {\n      value: 0\n    }\n    try {\n      const { form } = this.state\n      const { capital, risk, rweek, nweeks } = form\n      const value = new Big(capital)\n        .times(Math.pow(1 + (rweek * risk) / 100, nweeks))\n        .toFixed(2)\n      result.value = numeral(value).format('0,0')\n      return result\n    } catch (err) {\n      console.error('ouch!', err.message)\n      return result\n    }\n  }\n\n  render() {\n    const { form } = this.state\n    const { capital, risk, rweek, nweeks } = form\n\n    const { value } = this.compute()\n    return (\n      <Main\n        title='Compound Interest Calculator'\n        description='Calculate R per week'>\n        <div>\n          <h1 className='text-2xl text-left'>Compound interest calculator</h1>\n          <div>\n            <div className='mt-4'>\n              <table className='border-l-2 shadow-xl table-fixed w-full mt-2'>\n                <tbody>\n                  <CalculatorRow\n                    label='Account Balance'\n                    name='capital'\n                    value={capital}\n                    onChange={this.handleInputChange}\n                  />\n                  <CalculatorRow\n                    label='R (%)'\n                    name='risk'\n                    value={risk}\n                    onChange={this.handleInputChange}\n                  />\n                  <CalculatorRow\n                    label='R per week'\n                    name='rweek'\n                    value={rweek}\n                    onChange={this.handleInputChange}\n                  />\n                  <CalculatorRow\n                    label='Number of weeks'\n                    name='nweeks'\n                    value={nweeks}\n                    onChange={this.handleInputChange}\n                  />\n                  <CalculatorRow\n                    label='Future value'\n                    type='text'\n                    value={value}\n                    variant='long'\n                    readOnly\n                  />\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </Main>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAUA;AACA;AACA;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAIA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;AA5FA;AACA;;;;;A","sourceRoot":""}